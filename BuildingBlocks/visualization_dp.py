"""a quick handle to visualize the DP array to better understanding"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/DpVisualization/01_visBruteForce.ipynb.

# %% auto 0
__all__ = ['DPType', 'visualize_dp_history']

# %% ../nbs/DpVisualization/01_visBruteForce.ipynb 2
import ipywidgets as widgets
from IPython.display import display, clear_output
import copy
from typing import Union, List, Any

# %% ../nbs/DpVisualization/01_visBruteForce.ipynb 4
DPType = Union[
    List[Any],
    List[List[Any]],
    List[List[List[Any]]]
]

def visualize_dp_history(dp_history : DPType,  # a list of lists with any type is acceptable
                         ): # -> None:
    """
    returns a widget to visualize the history of a dynamic programming table.
    """

    # State index tracker
    state_index = widgets.IntText(value=0, description="Index:", disabled=True)

    # Output widget
    output = widgets.Output()

    # Display function
    def update_display():
        with output:
            clear_output(wait=True)
            i = state_index.value
            print(f"Step {i}:")
            if isinstance(dp_history[i], list) and all(isinstance(row, list) for row in dp_history[i]):
                print("DP Table:")
                for row in dp_history[i]:
                    print(row)
            else:
                print("DP Table:")
                print(dp_history[i])

    # Buttons
    prev_button = widgets.Button(description="Previous")
    next_button = widgets.Button(description="Next")

    # Button callbacks
    def on_prev_click(b):
        if state_index.value > 0:
            state_index.value -= 1
            update_display()

    def on_next_click(b):
        if state_index.value < len(dp_history) - 1:
            state_index.value += 1
            update_display()

    # Attach callbacks
    prev_button.on_click(on_prev_click)
    next_button.on_click(on_next_click)

    # Initial display
    update_display()

    # Layout
    controls = widgets.HBox([prev_button, next_button])
    display(controls, output)
