"""different implementation of Matrix and scalar multiplication"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_matrix_scalar_multiply.ipynb.

# %% auto 0
__all__ = ['matrix_scalar_multiply', 'matrix_scalar_multiply_numpy', 'matrix_scalar_multiply_torch']

# %% ../nbs/04_matrix_scalar_multiply.ipynb 2
from typing import List, Union
import numpy as np
import torch

# %% ../nbs/04_matrix_scalar_multiply.ipynb 4
def matrix_scalar_multiply( matrix: list[list[Union[int,float]]], # Matrix of size m,n
                            scalar: Union[int,float] # scalar int or float
                           ) -> list[list[Union[int,float]]]: # Matrix of size m, n
    matrix = np.array(matrix)
    result = [(row * scalar).tolist() for row in matrix]
    return result

# %% ../nbs/04_matrix_scalar_multiply.ipynb 6
def matrix_scalar_multiply_numpy( matrix: list[list[Union[int,float]]], # Matrix of size m,n
                            scalar: Union[int,float] # scalar int or float
                           ) -> list[list[Union[int,float]]]: # Matrix of size m, n
    result = np.multiply(matrix, scalar)
    return result

# %% ../nbs/04_matrix_scalar_multiply.ipynb 8
def matrix_scalar_multiply_torch( matrix: list[list[Union[int,float]]], # Matrix of size m,n
                            scalar: Union[int,float] # scalar int or float
                           ) -> list[list[Union[int,float]]]: # Matrix of size m, n
    result = torch.mul(matrix, scalar)
    return result
